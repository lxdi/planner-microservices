input {
#     file {
#         path => "/input/logs/*.log"
#         codec => multiline {
#                        pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}.*"
#                        negate => "true"
#                        what => "previous"
#                      }
#         type => "logback"
#     }

    udp {
        port => "5000"
        type => "logback"
        codec => json
    }
    tcp {
        port => "5000"
        type => "logback"
        codec => json_lines
    }
    http {
        port => "5001"
        codec => "json"
    }
}


filter {
  #If log line contains tab character followed by 'at' then we will tag that entry as stacktrace
  if [message] =~ "\tat" {
    grok {
      match => ["message", "^(\tat)"]
      add_tag => ["stacktrace"]
    }
  }
  #Grokking Spring Boot's default log format
  grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp}\s+%{LOGLEVEL:severity}\s+\[%{DATA:service},%{DATA:trace},%{DATA:span},%{DATA:exportable}\]\s+%{DATA:pid}\s+---\s+\[%{DATA:thread}\]\s+%{DATA:class}\s+:\s+%{GREEDYDATA:rest}" }
  }

  #Parsing out timestamps which are in timestamp field thanks to previous grok section
  date {
    match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
  }
}

output {
    if [type]=="logback" {
         elasticsearch {
             hosts => [ "http://elasticsearch:9200" ]
             index => "planner2"
        }
    }
}
