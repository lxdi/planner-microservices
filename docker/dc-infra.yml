version: '3.4'
services:

  #----------DB--------------
  postgres:
    image: postgres:9.4
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ${postgresDataPath}:/data/postgres
      - ${initScriptsPath}:/docker-entrypoint-initdb.d/

  #-----------------kafka--------------------
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    volumes:
      - ${kafkaPath}:/kafka

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${hostip}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - ${kafkaPath}:/kafka
  #            - /var/run/docker.sock:/var/run/docker.sock


  #----------Monitoring--------------
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    ports:
      - "9200:9200"
    environment:
      - "discovery.type=single-node"
  #        volumes:
  #          - /home/alex/installs/planner2/elasticsearch/data:/usr/share/elasticsearch/data:rw

  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    ports:
      - "5601:5601"
    restart: on-failure
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:7.0.0
    volumes:
      - ${logstashConfigPath}:/config
      - ${logsPath}:/input/logs
    command: logstash -f /config/logstash.conf
    depends_on:
      - elasticsearch

  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

#networks:
#    loggin-net: {}
